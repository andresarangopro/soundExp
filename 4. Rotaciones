
  
import themidibus.*;
MidiBus myBus;
int notapresionada;
int notasuelta;
float angulo=0;


int[] notas = {40,42,43,45};
int[] posicionesX = {100, 30, 50, 300,50,70};
int[] posicionesY = {300, 300, 300, 300};
int[] opacidades = {1, 200, 200, 200};


//--------------------------------------------------------------

void setup(){
      fill(0, 0, 0,200);
  size(800, 800);
  background(0);
  //frameRate(50); Este valor lo tiene Ana verificar si se trata de calidad de círculos
  MidiBus.list(); // List all devices
  myBus = new MidiBus(this,"A-500S",0); // nanoKEY
}

//--------------------------------------------------------------
void draw(){

 // background(0); // Ana en lugar de este fondo tiene 
  noStroke();    
  //Sol en el centro de la ventana
  translate(width/2, height/2);
  ellipse(0, 0, 60, 0);

    
    // La tierra gira alrededor del sol

    pushMatrix(); //----------->
    rotate(angulo); //Ana tenía este valor acà y en las siguientes: rotate(radians(angulo));
    translate(100,0);
    fill(46,134,193,0);
    rect(0, 0, 10, 100);
    
    // Luna cercana gira alrededor de la tierra
    pushMatrix(); //----------->
    rotate(-angulo);
    translate(30,0);
    fill(244, 208, 63,0);
    rect(0, 0, 10, 100);
    popMatrix(); //<------------
        for (int i = 0; i < posicionesX.length; i+=20){
    // Luna lejana  gira alrededor de la tierra
    pushMatrix(); //----------->
    rotate(-angulo*2.55);
    translate(50,0);
    fill(0, 0, 255,10);
    rect(0, 0, 10, 100);
    popMatrix(); //<------------
    popMatrix(); //<------------
     }
//--------------------------------------------------------------
    // Otro planeta lejano girando al rededor del sol
  rotate(angulo);
  translate(300,0);
  fill(#50F759,0);
    rect(0, 5, 10, 100);

  // Luna cercana gira alrededor de planeta lejano
 pushMatrix(); //----------->
    rotate(-angulo);
    translate(50,0);
    fill(244, 208, 63,0);
    rect(0, 0, 10, 100);
    popMatrix(); //<------------

  // Luna lejana  gira alrededor de planeta lejano
  pushMatrix(); //----------->
  rotate(-angulo*2.55);
  translate(70,0);
  fill(#9FA1B9,30);
    rect(0, 0, 10, 100);
  popMatrix(); //<------------
    
    
  angulo+=0.01;
    
    
}


//-------------------------------------------
void noteOn(int channel, int pitch, int velocity) {
  println("Pitch: " + pitch + " | Velocity: " + velocity);
  notapresionada = pitch;
  
  
  // inicio barras verticales
  for (int i = 0; i < notas.length; i++) {
    if(notas[i] ==notapresionada){//leer la posición i del arreglo notas 
   fill(0,0,0,200);  

    }
  }
   //fin barras verticales
   }
   
   //-------------------------------------------
void noteOff(int channel, int pitch, int velocity) {
  println("Pitch: " + pitch + " | Velocity: " + velocity);
  notasuelta = pitch;
  
  // inicio barras verticales
  for (int i = 0; i < notas.length; i++) {
    if(notas[i] ==notasuelta){//leer la posición i del arreglo notas


    }
  }
  // fin barras verticales
  
  }
